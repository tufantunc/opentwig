const path = require('path');
const cwd = process.cwd();
const fs = require('fs');

/**
 * Saves all generated assets to the 'dist' directory.
 * @param {Object} assets - The assets object generated by buildPage.js.
 */
module.exports = function(assets) {
    const { html, css, ogImage, qrImage, avatarAsset } = assets;

    // Ensure output directory exists
    const distDir = path.join(cwd, 'dist');
    if (!fs.existsSync(distDir)) {
        fs.mkdirSync(distDir, { recursive: true });
    }

    // Write the generated HTML
    fs.writeFileSync(path.join(distDir, 'index.html'), html);

    // Write the generated CSS
    if (css) {
        fs.writeFileSync(path.join(distDir, 'style.css'), css);
    }

    // Write the generated OG Image
    if (ogImage) {
        fs.writeFileSync(path.join(distDir, 'og-image.jpg'), ogImage);
    }

    // Write the generated QR Image
    if (qrImage) {
        fs.writeFileSync(path.join(distDir, 'qr.svg'), qrImage);
    }

    // Save the avatar based on the asset type
    if (avatarAsset) {
        const outputAvatarPath = path.join(distDir, avatarAsset.filename);
        if (avatarAsset.data) {
            // If we have a data buffer (resized JPG/PNG), write it
            fs.writeFileSync(outputAvatarPath, avatarAsset.data);
        } else if (avatarAsset.sourcePath) {
            // If we have a source path (SVG/GIF), copy the file
            fs.copyFileSync(avatarAsset.sourcePath, outputAvatarPath);
        }
    }
};